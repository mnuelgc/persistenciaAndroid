// Generated by view binder compiler. Do not edit!
package es.eps.ua.sharedprefeferences.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.SeekBar;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import es.eps.ua.sharedprefeferences.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityKotlinIntroduceDataBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final TextView appValuesText;

  @NonNull
  public final Button applyChangesKotlin;

  @NonNull
  public final EditText editTextField;

  @NonNull
  public final Button exitButtonKotlin;

  @NonNull
  public final SeekBar seekBarKotlinId;

  @NonNull
  public final TextView siezeLabelText;

  @NonNull
  public final TextView sizeLabelResultText;

  @NonNull
  public final TextView sizeResult;

  @NonNull
  public final Button swapLanguageButtonKotlin;

  @NonNull
  public final TextView textLabel;

  @NonNull
  public final TextView textResult;

  private ActivityKotlinIntroduceDataBinding(@NonNull ConstraintLayout rootView,
      @NonNull TextView appValuesText, @NonNull Button applyChangesKotlin,
      @NonNull EditText editTextField, @NonNull Button exitButtonKotlin,
      @NonNull SeekBar seekBarKotlinId, @NonNull TextView siezeLabelText,
      @NonNull TextView sizeLabelResultText, @NonNull TextView sizeResult,
      @NonNull Button swapLanguageButtonKotlin, @NonNull TextView textLabel,
      @NonNull TextView textResult) {
    this.rootView = rootView;
    this.appValuesText = appValuesText;
    this.applyChangesKotlin = applyChangesKotlin;
    this.editTextField = editTextField;
    this.exitButtonKotlin = exitButtonKotlin;
    this.seekBarKotlinId = seekBarKotlinId;
    this.siezeLabelText = siezeLabelText;
    this.sizeLabelResultText = sizeLabelResultText;
    this.sizeResult = sizeResult;
    this.swapLanguageButtonKotlin = swapLanguageButtonKotlin;
    this.textLabel = textLabel;
    this.textResult = textResult;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityKotlinIntroduceDataBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityKotlinIntroduceDataBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_kotlin_introduce_data, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityKotlinIntroduceDataBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.appValuesText;
      TextView appValuesText = ViewBindings.findChildViewById(rootView, id);
      if (appValuesText == null) {
        break missingId;
      }

      id = R.id.applyChangesKotlin;
      Button applyChangesKotlin = ViewBindings.findChildViewById(rootView, id);
      if (applyChangesKotlin == null) {
        break missingId;
      }

      id = R.id.editTextField;
      EditText editTextField = ViewBindings.findChildViewById(rootView, id);
      if (editTextField == null) {
        break missingId;
      }

      id = R.id.exitButtonKotlin;
      Button exitButtonKotlin = ViewBindings.findChildViewById(rootView, id);
      if (exitButtonKotlin == null) {
        break missingId;
      }

      id = R.id.seekBarKotlinId;
      SeekBar seekBarKotlinId = ViewBindings.findChildViewById(rootView, id);
      if (seekBarKotlinId == null) {
        break missingId;
      }

      id = R.id.siezeLabelText;
      TextView siezeLabelText = ViewBindings.findChildViewById(rootView, id);
      if (siezeLabelText == null) {
        break missingId;
      }

      id = R.id.sizeLabelResultText;
      TextView sizeLabelResultText = ViewBindings.findChildViewById(rootView, id);
      if (sizeLabelResultText == null) {
        break missingId;
      }

      id = R.id.sizeResult;
      TextView sizeResult = ViewBindings.findChildViewById(rootView, id);
      if (sizeResult == null) {
        break missingId;
      }

      id = R.id.swapLanguageButtonKotlin;
      Button swapLanguageButtonKotlin = ViewBindings.findChildViewById(rootView, id);
      if (swapLanguageButtonKotlin == null) {
        break missingId;
      }

      id = R.id.textLabel;
      TextView textLabel = ViewBindings.findChildViewById(rootView, id);
      if (textLabel == null) {
        break missingId;
      }

      id = R.id.textResult;
      TextView textResult = ViewBindings.findChildViewById(rootView, id);
      if (textResult == null) {
        break missingId;
      }

      return new ActivityKotlinIntroduceDataBinding((ConstraintLayout) rootView, appValuesText,
          applyChangesKotlin, editTextField, exitButtonKotlin, seekBarKotlinId, siezeLabelText,
          sizeLabelResultText, sizeResult, swapLanguageButtonKotlin, textLabel, textResult);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
